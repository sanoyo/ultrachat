type ChatMessage {
  id: ID!
  message: String!
  createdAt: String!
}

type Space {
  id: Int!
  name: String!
  createdAt: String!
}

type User {
  id: Int!
  name: String!
  email: String!
  createdAt: String!
}

type UserInvitation {
  id: Int!
  senderId: Int!
  receiverId: Int!
  spaceId: Int!
}

type Query {
  getChatMessages: [ChatMessage!]!
}

type Mutation {
  sendMessage(message: String!): ChatMessage!
  createSpace(name: String!): Space!
  inviteSpace(senderId: Int!, spaceId: Int!, email: String!): UserInvitation!
}

type Subscription {
  messageSent: ChatMessage!
}
